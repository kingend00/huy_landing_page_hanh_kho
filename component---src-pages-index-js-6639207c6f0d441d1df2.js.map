{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["IndexPage","state","smallScreen","modal","name","componentDidMount","window","addEventListener","this","resize","bind","setState","innerWidth","openModal","e","document","getElementById","style","display","closeModal","render","indexData","props","data","allIndexJson","nodes","homeItems","i","home_items","forEach","item","push","key","onClick","className","backgroundImage","image","backgroundSize","page","property","content","title","description","text","subtitle","id","completed","src","alt","Component"],"mappings":"+JAIMA,E,oJACJC,MAAQ,CACNC,aAAa,EACbC,MAAO,CAAEC,KAAM,K,8CAGjBC,kBAAA,WACEC,OAAOC,iBAAiB,SAAUC,KAAKC,OAAOC,KAAKF,OACnDA,KAAKC,U,EAGPA,OAAA,WACED,KAAKG,SAAS,CAAET,YAAaI,OAAOM,YAAc,O,EAGpDC,UAAA,SAAUC,GACRN,KAAKG,SAAS,CAAER,MAAOW,IACvBC,SAASC,eAAe,SAASC,MAAMC,QAAU,S,EAGnDC,WAAA,WACEJ,SAASC,eAAe,SAASC,MAAMC,QAAU,Q,EAEnDE,OAAA,WAAU,IAAD,OACHC,EAAYb,KAAKc,MAAMC,KAAKC,aAAaC,MAAM,GAC/CC,EAAY,GACZC,EAAI,EAiBR,OAhBAN,EAAUO,WAAWC,SAAQ,SAAAC,GAC3BJ,EAAUK,KACR,yBACEC,IAAKL,EACLM,QAAS,EAAKpB,UAAUH,KAAK,EAAMoB,GACnCI,UACE,EAAKjC,MAAMC,YAAc,kBAAoB,iBAE/Ce,MAAO,CACLkB,gBAAgB,OAAQL,EAAKM,MAAd,IACfC,eAAgB,WAItBV,OAGA,kBAAC,IAAD,CAAQW,KAAM,QACZ,0BAAMC,SAAS,UAAUC,QAAQ,wBACjC,0BACED,SAAS,WACTC,QAAQ,wBAEV,0BACED,SAAS,iBACTC,QAAQ,aAEV,0BACED,SAAS,WACTC,QAASnB,EAAUO,WAAW,GAAGQ,QAEnC,kBAAC,IAAD,CACEK,MAAM,YACNL,MAAOf,EAAUO,WAAW,GAAGQ,MAC/BM,YAAY,cAEd,wBAAIR,UAAU,SAASb,EAAUoB,OACjC,yBAAKP,UAAU,aACb,yBAAKA,UAAU,QAAQb,EAAUsB,MACjC,yBAAKT,UAAU,YACf,wBAAIA,UAAU,YAAYb,EAAUuB,UACpC,yBACEV,UACE1B,KAAKP,MAAMC,YACP,uBACA,uBAGLwB,IAGL,yBAAKmB,GAAG,QAAQX,UAAU,QAAQD,QAASzB,KAAKW,YAC9C,yBACEe,UACE1B,KAAKP,MAAMC,YAAc,sBAAwB,iBAGnD,0BAAMgC,UAAU,eAAhB,KACA,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,wBACb,0BAAMA,UAAU,eAAe1B,KAAKP,MAAME,MAAMC,MAChD,uBAAG8B,UAAU,cAAc1B,KAAKP,MAAME,MAAMuC,aAC5C,uBAAGR,UAAU,cAAb,YACY1B,KAAKP,MAAME,MAAM2C,YAG/B,yBAAKZ,UAAU,yBACb,yBACEa,IAAKvC,KAAKP,MAAME,MAAMiC,MACtBY,IAAKxC,KAAKP,MAAME,MAAMC,KACtB8B,UAAU,sB,GAjGJe,aA2GTjD","file":"component---src-pages-index-js-6639207c6f0d441d1df2.js","sourcesContent":["import React, { Component } from \"react\"\nimport Layout from \"../components/Layout/layout\"\nimport SEO from \"../components/seo\"\n\nclass IndexPage extends Component {\n  state = {\n    smallScreen: false,\n    modal: { name: \"\" },\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.resize.bind(this))\n    this.resize()\n  }\n\n  resize() {\n    this.setState({ smallScreen: window.innerWidth <= 840 })\n  }\n\n  openModal(e) {\n    this.setState({ modal: e })\n    document.getElementById(\"modal\").style.display = \"block\"\n  }\n\n  closeModal() {\n    document.getElementById(\"modal\").style.display = \"none\"\n  }\n  render() {\n    let indexData = this.props.data.allIndexJson.nodes[0]\n    let homeItems = []\n    let i = 0\n    indexData.home_items.forEach(item => {\n      homeItems.push(\n        <div\n          key={i}\n          onClick={this.openModal.bind(this, item)}\n          className={\n            this.state.smallScreen ? \"grid-item-small\" : \"home-grid-item\"\n          }\n          style={{\n            backgroundImage: `url(${item.image})`,\n            backgroundSize: \"100%\",\n          }}\n        ></div>\n      )\n      i++\n    })\n    return (\n      <Layout page={\"home\"}>\n        <meta property=\"og:type\" content=\"Hành phi Nhung Việt\" />\n        <meta\n          property=\"og:title\"\n          content=\"Hành phi Nhung Việt\"\n        />\n        <meta\n          property=\"og:description\"\n          content=\"Hành khô\"\n        />\n        <meta\n          property=\"og:image\"\n          content={indexData.home_items[0].image}\n        />\n        <SEO\n          title=\"Trang chủ\"\n          image={indexData.home_items[0].image}\n          description=\"Trang chủ\"\n        />\n        <h1 className=\"title\">{indexData.title}</h1>\n        <div className=\"home-main\">\n          <div className=\"text\">{indexData.text}</div>\n          <div className=\"divider\"></div>\n          <h2 className=\"subtitle\">{indexData.subtitle}</h2>\n          <div\n            className={\n              this.state.smallScreen\n                ? \"grid-container-small\"\n                : \"home-grid-container\"\n            }\n          >\n            {homeItems}\n          </div>\n        </div>\n        <div id=\"modal\" className=\"modal\" onClick={this.closeModal}>\n          <div\n            className={\n              this.state.smallScreen ? \"modal-content-small\" : \"modal-content\"\n            }\n          >\n            <span className=\"modal-close\">&times;</span>\n            <div className=\"modal-grid-container\">\n              <div className=\"modal-grid-item-left\">\n                <span className=\"modal-title\">{this.state.modal.name}</span>\n                <p className=\"modal-text\">{this.state.modal.description}</p>\n                <p className=\"modal-text\">\n                  Giá bán: {this.state.modal.completed}\n                </p>\n              </div>\n              <div className=\"modal-grid-item-right\">\n                <img\n                  src={this.state.modal.image}\n                  alt={this.state.modal.name}\n                  className=\"modal-image\"\n                ></img>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Layout>\n    )\n  }\n}\nexport default IndexPage\n\nexport const query = graphql`\n  query {\n    allIndexJson {\n      nodes {\n        title\n        description\n        text\n        subtitle\n        home_items {\n          name\n          description\n          completed\n          image\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}